# generated by fastapi-codegen:
#   filename:  object_api.yaml
#   timestamp: 2021-04-09T15:12:24+00:00

from __future__ import annotations

from typing import List, Optional, Union
from uuid import UUID

from fastapi import FastAPI, Query
from pydantic import conint

from .models import Object

app = FastAPI(
    description='This',
    version='1.0.0',
    title='Object API',
    contact={'email': 'tobias.schoch@vtxmail.ch'},
    license={
        'name': 'Apache 2.0',
        'url': 'http://www.apache.org/licenses/LICENSE-2.0.html',
    },
)


@app.get('/buckets', response_model=None)
def api_buckets_search() -> None:
    """
    searches for objects
    """
    pass


@app.get('/object', response_model=List[Object])
def api_objects_search(
    search_string: Optional[str] = Query(None, alias='searchString'),
    skip: Optional[conint(ge=0)] = None,
    limit: Optional[conint(ge=0, le=50)] = None,
) -> List[Object]:
    """
    searches for objects
    """
    pass


@app.put('/object', response_model=Union[Object, List[Object]])
def api_objects_create_or_update(body: Object = None) -> Union[Object, List[Object]]:
    """
    create or update object
    """
    pass


@app.get('/object/{id}', response_model=Object)
def api_objects_get(id: UUID) -> Object:
    """
    get an object
    """
    pass


@app.delete('/object/{id}', response_model=None)
def api_objects_delete(id: UUID) -> None:
    """
    delets an object
    """
    pass


@app.post('/object/{id}/finalize', response_model=None)
def api_objects_finalize(id: UUID) -> None:
    """
    mark objected as completly written
    """
    pass


@app.post('/object/{id}/rename', response_model=None)
def api_objects_rename(id: UUID) -> None:
    """
    rename object
    """
    pass
